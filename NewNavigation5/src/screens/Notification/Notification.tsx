import React from 'react';
import { View, Text, TouchableOpacity, DeviceEventEmitter } from 'react-native';
import FirebaseServices from '../../utils/FirebaseServices';
import PushNotificationAndroid from 'react-native-push-notification'
var PushNotification = require("react-native-push-notification");
import {Images} from '../../constants';

export interface AppProps {
}
interface AppState {
}
const func = () => {
console.log('here');
debugger
}
export default class App extends React.PureComponent<AppProps, any> {
    constructor(props: AppProps) {
        super(props);
    }

    componentDidMount() { 
        let _this = this
        FirebaseServices.checkPermission((token: string) => {

            PushNotification.configure({
                // (optional) Called when Token is generated (iOS and Android)
                onRegister: function (token: any) {
                    console.log("TOKEN:", token);
                },

                // (required) Called when a remote or local notification is opened or received
                onNotification:  (notification: any) => {
                    console.log("NOTIFICATION:", notification);
                    this.actionNotification(notification.action)
                    // func()
                    // process the notification

                },

                // ANDROID ONLY: GCM or FCM Sender ID (product_number) (optional - not required for local notifications, but is need to receive remote push notifications)
                senderID: token,

                // IOS ONLY (optional): default: all - Permissions to register.
                permissions: {
                    alert: true,
                    badge: true,
                    sound: true
                },

                // Should the initial notification be popped automatically
                // default: true
                popInitialNotification: true,
                requestPermissions: true
            })
        })
    }

    actionNotification = (action: string) => {

        if (action == 'Kuch Kar') {
            console.warn('ok')
            // Do work pertaining to Accept action here
        } else {
            // Do work pertaining to Reject action here
            console.warn('no')
        }
        // Add all the required actions handlers

    }

    localNotification = () => {
        PushNotification.localNotification({
            /* Android Only Properties */
            id: (Math.round(Math.random()) * 1001).toPrecision().toString(), // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
            ticker: "My Notification Ticker", // (optional)
            autoCancel: false, // (optional) default: true
            largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
            smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"
            bigText: "My big text that will be shown when notification is expanded My big text that will be shown when notification is expanded ", // (optional) default: "message" prop
            subText: "This is a subText", // (optional) default: none
            color: "red", // (optional) default: system default
            vibrate: true, // (optional) default: true
            vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
            tag: 'some_tag', // (optional) add tag to message
            group: "group", // (optional) add group to message
            ongoing: false, // (optional) set whether this is an "ongoing" notification
            priority: "high", // (optional) set notification priority, default: high
            visibility: "private", // (optional) set notification visibility, default: private
            importance: "high", // (optional) set notification importance, default: high

            /* iOS and Android properties */
            title: "My Notification Title", // (optional)
            message: "My Notification Message", // (required)
            playSound: true, // (optional) default: true
            soundName: 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
            number: '10', // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
            // repeatType: 'day', // (optional) Repeating interval. Check 'Repeating Notifications' section for more info.
            actions: '["Kuch Kar", "Kuch Mat Kar"]',  // (Android only) See the doc for notification actions to know more
        });
    }

    public render() {
        return (
            <View>
                <Text>App Component</Text>
                <TouchableOpacity onPress={() => this.localNotification()} >
                    <Text>Show Notification</Text>
                </TouchableOpacity>
            </View >
        );
    }
}

